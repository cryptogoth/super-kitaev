// Create the explicit controlled-controlled-Not (Toffoli) gate

qureg A[3];

// Apply Hadamard to least significant qubit
Mix(A[0]);
Mix(A[1]);
dump;
// Expected output:
// 0.5 |0> + 0.5 |1> + 0.5 |2> + 0.5 |3>

// First, make sure that we understand what is going on with Controlled-Not
// That is, which are the two (control) qubits and which is the second (target)
Matrix8x8((1,0),(0,0),(0,0),(0,0), (0,0),(0,0),(0,0),(0,0),
          (0,0),(1,0),(0,0),(0,0), (0,0),(0,0),(0,0),(0,0),
          (0,0),(0,0),(1,0),(0,0), (0,0),(0,0),(0,0),(0,0),
          (0,0),(0,0),(0,0),(1,0), (0,0),(0,0),(0,0),(0,0),
          (0,0),(0,0),(0,0),(0,0), (1,0),(0,0),(0,0),(0,0),
          (0,0),(0,0),(0,0),(0,0), (0,0),(1,0),(0,0),(0,0),
          (0,0),(0,0),(0,0),(0,0), (0,0),(0,0),(0,0),(1,0),
          (0,0),(0,0),(0,0),(0,0), (0,0),(0,0),(1,0),(0,0),
          A[2] & A[1] & A[0]);

// Interesting, so the first qubit in the tensor product appears last in the
// register
dump;
// Expected output:
// 0.5 |0> + 0.5 |1> + 0.5 |2> + 0.5 |7>

// Now reset and make sure we know that QCL's default byte ordering is LSB
// first
reset;
Mix(A[1]);
Mix(A[2]);
dump;
// Expected output:
// 0.5 |0> + 0.5 |2> + 0.5 |4> + 0.5 |6>

Matrix8x8((1,0),(0,0),(0,0),(0,0), (0,0),(0,0),(0,0),(0,0),
          (0,0),(1,0),(0,0),(0,0), (0,0),(0,0),(0,0),(0,0),
          (0,0),(0,0),(1,0),(0,0), (0,0),(0,0),(0,0),(0,0),
          (0,0),(0,0),(0,0),(1,0), (0,0),(0,0),(0,0),(0,0),
          (0,0),(0,0),(0,0),(0,0), (1,0),(0,0),(0,0),(0,0),
          (0,0),(0,0),(0,0),(0,0), (0,0),(1,0),(0,0),(0,0),
          (0,0),(0,0),(0,0),(0,0), (0,0),(0,0),(0,0),(1,0),
          (0,0),(0,0),(0,0),(0,0), (0,0),(0,0),(1,0),(0,0),
          A);

dump;
// So now we should expect the same as before, if A[0] is implicitly before A[1]
// Because QCL takes the control from the last qubit in the register
// Expected output:
// 0.5 |0> + 0.5 |1> + 0.5 |2> + 0.5 |7>

