// Test for top-level call to Kitaev parallel adding

include "utils/qprint.qcl";
include "utils/toffoli.qcl";
include "adder/narrow.qcl";
include "adder/compose.qcl";
include "adder/parallel-iterate.qcl";
include "adder/parallel-add.qcl";

// We store two 4-bit numbers to add in a and b
qureg a[4];
qureg b[4];
qureg scratch[4];
// Registers for narrowed carry tables
qureg ctables[2*7];
qureg stables[2*4];

qureg carry[5];
qureg sum[4];

// Fill the values of a and b, 0-based indexing
// a = 0b 1011 = 11
Not(a[3]);
Not(a[1]);
Not(a[0]);
// b = 0b 0111 = 7
Not(b[2]);
Not(b[1]);
Not(b[0]);

// positions 0 and 1 generate a carry bit no matter what
// position 2 propagates a carry bit
// position 3 propagates a carry bit

// position 0 sums to 0 no matter what
// position 1 sums to 0 if c_i = 0 and 1 otherwise
// positions 2 and 3 sums to 1 if c_i = 0 and 0 otherwise

qprints(a,"a= ");
qprints(b,"b= ");
// Expected output
// 1 | 11 > 
// 2 | 7 > 

// For 4-bit numbers, l=2
parallelAdd(stables, ctables, a, b, 2, scratch, carry, sum);

qprints(stables, "stables= ");
qprints(ctables, "ctables= ");
qprints(carry[4] & sum, "sum= ");
qprints(scratch, "scratch= ");
