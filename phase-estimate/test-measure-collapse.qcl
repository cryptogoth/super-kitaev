// Test applying the measurement operator for the superposition of
// odd magic states, and seeing if we collapse to the same one over
// multiple measurements

include "magic-state/odd-superpose.qcl";
include "phase-estimate/operator-x.qcl";
include "utils/copy.qcl";

int s=10;
qureg B[4*(s+1)];
qucond condition;
int c;
int i;
int sum = 0;
int j;
int k;
qureg instrument[s];

// Mix the instrument / control qubit
Mix(instrument);

// Create a magic state to copy |\psi_{4,1}>
CreateOddMagicSuperposition(B[0..3]);

dump B[0..3];

for i=0 to s-1 {
	dump instrument[i];
	j = 4*i;
	k = 4*(i+1);
	if (instrument[i]) {
		operatorX(B[j..j+1], B[k..k+3], 2);
	} else {
		copy(B[k..k+3], B[j..j+3]);
	}
	dump B[j..j+3];
}

for i=0 to s-1 {
	measure instrument[i], c;
	print "c= ", c;
	if (c == 1) {
		sum = sum + 1;
	}
	j = 4*i;
	dump B[j..j+3];
}

print "sum= ", sum;

dump;
